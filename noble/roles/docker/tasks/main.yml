---
- name: Validate Docker installation method
  ansible.builtin.assert:
    that:
      - docker_install_method | default('apt') in ['apt', 'snap']
    fail_msg: "docker_install_method must be either 'apt' or 'snap'"
    quiet: true

- block:
    - name: Check if snapd is available
      ansible.builtin.command: which snap
      register: snap_available
      failed_when: false
      changed_when: false

    - name: Ensure snapd service is running
      ansible.builtin.systemd:
        name: snapd
        state: started
        enabled: true
      when: snap_available.rc == 0

    - name: Install Docker via snap
      ansible.builtin.snap:
        classic: true
        state: present
        name: docker
      register: docker_install_result
      retries: 3
      delay: 10
      until: docker_install_result is succeeded
      when: snap_available.rc == 0

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ main_user }}"
        groups: docker
        append: true
      register: docker_group_result
      when: docker_install_result is defined and docker_install_result is succeeded

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      register: docker_version
      failed_when: false
      changed_when: false
      become_user: "{{ main_user }}"
      when: docker_install_result is defined and docker_install_result is succeeded

    - name: Record Docker installation summary (snap)
      ansible.builtin.set_fact:
        docker_install_summary:
          method: snap
          snap_available: "{{ 'Yes' if snap_available.rc == 0 else 'No' }}"
          install_succeeded: "{{ (docker_install_result is defined and docker_install_result is succeeded) | bool }}"
          user_added: "{{ (docker_group_result is defined and docker_group_result is succeeded) | bool }}"
          version: "{{ docker_version.stdout if docker_version is defined and docker_version.rc == 0 else 'Not available' }}"
  when: docker_install_method | default('apt') == 'snap'

- block:
    - name: Install Docker prerequisites (APT)
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: true

    - name: Determine Docker repository architecture
      ansible.builtin.set_fact:
        docker_repo_arch: >-
          {{
            'amd64' if ansible_architecture in ['x86_64', 'amd64'] else
            'arm64' if ansible_architecture in ['aarch64', 'arm64'] else
            ansible_architecture
          }}

    - name: Ensure Docker keyring directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Configure Docker apt repository
      ansible.builtin.copy:
        content: |
          deb [arch={{ docker_repo_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        dest: /etc/apt/sources.list.d/docker.list
        mode: '0644'

    - name: Update apt cache after adding Docker repository
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker packages
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      register: docker_packages_result

    - name: Ensure Docker service is running
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ main_user }}"
        groups: docker
        append: true
      register: docker_group_result

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      register: docker_version
      failed_when: false
      changed_when: false
      become_user: "{{ main_user }}"

    - name: Record Docker installation summary (APT)
      ansible.builtin.set_fact:
        docker_install_summary:
          method: apt
          snap_available: 'N/A'
          install_succeeded: "{{ (docker_packages_result is succeeded) | bool }}"
          user_added: "{{ (docker_group_result is succeeded) | bool }}"
          version: "{{ docker_version.stdout if docker_version.rc == 0 else 'Not available' }}"
  when: docker_install_method | default('apt') == 'apt'

- name: Display Docker installation status
  ansible.builtin.debug:
    msg: |
      Docker installation status:
      - Method: {{ docker_install_summary.method }}
      - Snap available: {{ docker_install_summary.snap_available }}
      - Installation: {{ 'OK' if docker_install_summary.install_succeeded | bool else 'FAILED' }}
      - User added to group: {{ 'OK' if docker_install_summary.user_added | bool else 'FAILED' }}
      - Version: {{ docker_install_summary.version }}

      {% if docker_install_summary.user_added | bool %}
      Note: You may need to log out and log back in for group changes to take effect.
      {% endif %}
  when: docker_install_summary is defined
